#find mac based on status
findMac.sql=SELECT mac_config.id as MAC_CONFIG_ID,mac_config.ipa_mac_ip_address as IPA_MAC_IP_ADDRESS,\
			mac_config.ipa_mac_user_name as IPA_MAC_USER_NAME, \
			 mac_config.ipa_mac_password as IPA_MAC_PASSWORD, \
			 mac_config.status as STATUS,mac_config.apple_dev_account as APPLE_DEV_ACCOUNT,\
			 mac_config.createdDate as CREATEDDATE,mac_config.updatedDate as UPDATEDDATE \
			  FROM geppetto.mac_config where geppetto.mac_config.status= :status 

#Insert Mac for User
insert.mac.sql=insert into mac_config (ipa_mac_ip_address, ipa_mac_user_name, ipa_mac_password, status,\
				 createdDate,updatedDate) values (:ipa_mac_ip_address, :ipa_mac_user_name, :ipa_mac_password,  \
				:status,:creatdedDate,:NOW());
 
 #update the mac table when it full				
 update.mac_allocation_status.sql=UPDATE mac_config SET status=:status ,updatedDate =:updatedDate WHERE id=:id;
 
#find Installr with mac id

findInstallr.sql = SELECT installr_user_config.id as INSTALLR_ID,installr_user_config.installr_user_name as INSTALLR_USER_NAME,\
			installr_user_config.installr_password as INSTALLR_PASSWORD, \
			 installr_user_config.user_id as USER_ID, \
			 installr_user_config.mac_config_id as MAC_CONFIG_ID,\
			 installr_user_config.createdDate as CREATEDDATE,installr_user_config.updatedDate as UPDATEDDATE ,\
			  installr_user_config.installrToken as INSTALLRTOKEN \
			  FROM geppetto.installr_user_config where geppetto.installr_user_config.mac_config_id= :mac_config_id 
 
 #Insert Installr account  for User
insertInstallrUser.sql =insert into installr_user_config (user_id, mac_config_id,\
				createdDate,updatedDate) values ( :user_id,  \
				:mac_config_id,:createdDate,:updatedDate);
				

 
 
 