findUser.sql=SELECT user.userid as USER_ID,user.username as USER_NAME,user.password as PASSWORD, \
			 user.languagepreference as LANGUAGE_PREFERENCE, \
			 user.startdate as START_DATE,user.licenseid as LICENESE_ID,user.lastaccess as LAST_ACCESS, \
			 user.mustresetpassword as RESETPASSWORD,user.accesstype as ACCESS_TYPE,user.newuser as NEW_USER, \
			 user.username as ROLE_USER_NAME \
			 FROM user inner join authority on user.userid =authority.user_id where user.username= :userName

#Find By User id
findUserById.sql=SELECT user.userid as USER_ID,user.username as USER_NAME,user.password as PASSWORD, \
    user.languagepreference as LANGUAGE_PREFERENCE, \
    user.startdate as START_DATE,user.licenseid as LICENESE_ID,user.lastaccess as LAST_ACCESS, \
    user.mustresetpassword as RESETPASSWORD,user.accesstype as ACCESS_TYPE,user.newuser as NEW_USER, \
    user.username as ROLE_USER_NAME,user.role as ROLE \
    FROM user inner join authority on user.userid =authority.user_id where user.userid= :userid

findAllUsers.sql = SELECT user.userid as USER_ID,user.username as USER_NAME,user.password as PASSWORD, \
    user.languagepreference as LANGUAGE_PREFERENCE, \
    user.startdate as START_DATE,user.licenseid as LICENESE_ID,user.lastaccess as LAST_ACCESS, \
    user.mustresetpassword as RESETPASSWORD,user.accesstype as ACCESS_TYPE,user.newuser as NEW_USER, \
    user.username as ROLE_USER_NAME,user.role as ROLE \
    FROM user
    			 
findRole.sql=SELECT authority.id as ID,user.username as USER_NAME,roles.role_name as ROLE_NAME FROM authority \
			 inner join user \
			 on authority.user_id=user.userid inner join roles \
			 on authority.role_id=roles.id where authority.user_id = :userId

#Insert User
insert.user.sql=insert into user (username, password, languagepreference, startdate, licenseid, lastaccess, \
				 mustresetpassword, accesstype, newuser,mac_config_id,installr_user_config_id) values (:username, :password, :languagepreference, :startdate, \
				:licenseid, :lastaccess, :mustresetpassword, :accesstype, :newuser, :mac_config_id, :installr_user_config_id);

#Insert New User details with admin details 
insert.userwithadmin.sql = insert into userdetailwithadmin (adminid, newuserid, created_on\
				) values (:adminid, :newuserid,  \
				:created_on);
				
#update the new user table cloumn lockorunlock status in it
update.userwithadmin.sql = UPDATE new_users SET lockorunlock =:lockorunlock	 WHERE id = :id and lockorunlock like "unlock" 				

#Update the NewUser table column isEditable and lockorunlock
update.uptStatusNewUser.sql = UPDATE new_users SET lockorunlock =:lockorunlock,isEditable =:isEditable,adminid =:adminid  WHERE id = :id

#Update the status of type of newusers table like OPEN to COMPLETE
update.statusChangetoNewUsr.sql = UPDATE new_users SET type =:type  WHERE user_id = :user_id

#update the installr name column field in newuser table 
update.insertinstallrname.sql = UPDATE new_users SET installr_name =:installr_name  WHERE user_id = :user_id 

#select the admin id as new userid
findAdminandnewuserId.sql = SELECT userdetailwithadmin.adminid as ADMIN_USER_ID, userdetailwithadmin.id as ID ,userdetailwithadmin.newuserid as NEW_USER_ID \
    FROM userdetailwithadmin  where userdetailwithadmin.adminid= :adminid and userdetailwithadmin.newuserid =:newuserid

findNewUserDetailsByUserId.sql = SELECT new_users.id as ID, new_users.user_id as USER_ID ,new_users.username as USERNAME,new_users.processed as PROCESSED, \
					   			new_users.lockorunlock as LOCKORUNLOCK, new_users.isEditable as ISEDITABLE, new_users.adminid as ADMINID , new_users.type as TYPE \
		    				FROM new_users  where new_users.user_id= :user_id

#delete.userdetailwithadmin.sql
delete.userdetailwithadmin.sql = delete from userdetailwithadmin where id=:id
				
#delete the installr data by using user_id
delete.installrbyuserId.sql = delete from installr_user_config where user_id =:user_id
				
#delete.userIdCrsponAdminId.sql
delete.userIdCrspndadminId.sql = delete from userdetailwithadmin where newuserid=:newuserid and adminid =:adminid
				
#update User With mac and installr
update.user.sql = UPDATE user SET mac_config_id=:mac_config_id, installr_user_config_id=:installr_user_config_id \
				 WHERE userid= :id				
#Update User
update.user_docker_json.sql=UPDATE user SET docker_json=:docker_json WHERE userid=:id;

update.user_docker_json_status.sql=UPDATE user SET docker_json_status=:docker_json_status WHERE userid=:id;

update_new_user_json_created.sql=UPDATE new_users SET json_created_on=NOW()	where user_id=:user_id	 				 