#InsertCouchAttribute
insertcouchattribute.sql=insert into couch_attribute(project_id, user_id, bucket, password, design, views, attribute)values(:project_id, :user_id, :bucket, :password, :design, :views, :attribute)

#Insert Noun
insertNoun.sql=insert into nouns (name, label, description, projectid, moduleid, cache_enabled,notes, \
    		   created_date, created_by,  last_modified_date, last_modified_by, default_activity_id) values \
    		  	(:name, :label, :description, :projectid, :moduleid, \
    			:cache_enabled, :notes,:created_date, :created_by, :last_modified_date, :last_modified_by, :default_activity_id) 
 
 #Insert Noun Attribute
insertNounAttribute.sql=insert into nounattributes (name, label, description, nounid, base_attr_type_id, part_of_unique_key, \
    					data_length, relationships,  notes,created_date, created_by,  last_modified_date, last_modified_by, modifier_name, modifier_id, is_secondary_noun) values \
    					(:name, :label, :description, :nounid, :base_attr_type_id, :part_of_unique_key, \
    					:data_length, :relationships, :notes,:created_date, :created_by, :last_modified_date, :last_modified_by, :modifier_name, :modifier_id, :is_secondary_noun)
    	   	
#Insert Wsdl_link data    	   	
insertWsdlLink.sql = insert into wsdllink_data (wsdl_endpoint,project_id,user_id) values (:wsdl_endpoint,:project_id,:user_id)

#Insert rest_link data    	   	
insertRestLink.sql = insert into restlink_data (rest_endpoint,project_id,user_id) values (:rest_endpoint,:project_id,:user_id)
    	   	
#Find Noun By NounId
findNounByNounId.sql=select nouns.id as NOUN_ID, nouns.name as NOUN_NAME, \
				 nouns.label as NOUN_LABEL, \
				 nouns.default_activity_id as NOUN_DEFAULT_ACTIVITY_ID,	\
				 nouns.description as NOUN_DESCRIPTION, nouns.projectid as NOUN_PROJECT_ID,  \
				 nouns.moduleid as NOUN_MODULE_ID, nouns.cache_enabled as NOUN_CACHE_ENABLED,  \
				 nouns.notes as NOUN_NOTES, nouns.created_by as NOUN_CREATED_BY, nouns.created_date as NOUN_CREATED_DATE,  \
				 nouns.last_modified_by as NOUN_LAST_MODIFIED_BY, nouns.last_modified_date as NOUN_LAST_MODIFIED_DATE,  \
				 nouns.last_modified_by as NOUN_LAST_MODIFIED_BY,  \
				 nounattributes.id as NOUN_ATTRIBUTE_ID, nounattributes.name as NOUN_ATTRIBUTE_NAME,  \
				 nounattributes.nounid as NOUN_ATTRIBUTE_NOUN_ID,  \
				 nounattributes.label as NOUN_ATTRIBUTE_LABEL, nounattributes.description as NOUN_ATTRIBUTE_DESCRIPTION,  \
				 nounattributes.base_attr_type_id as NOUN_ATTRIBUTE_base_attr_type_id,  \
				 nounattributes.part_of_unique_key as NOUN_ATTRIBUTE_PART_OF_UNIQUE_KEY,  \
				 nounattributes.data_length as NOUN_ATTRIBUTE_DATA_LENGTH,  \
				 nounattributes.relationships as NOUN_ATTRIBUTE_RELATIONSHIPS,  \
				 nounattributes.notes as NOUN_ATTRIBUTE_NOTES,  \
				 nounattributes.created_by as NOUN_ATTRIBUTE_CREATED_BY, nounattributes.created_date as NOUN_ATTRIBUTE_CREATED_DATE,  \
				 nounattributes.last_modified_by as NOUN_ATTRIBUTE_LAST_MODIFIED_BY,  \
				 nounattributes.last_modified_date as NOUN_ATTRIBUTE_LAST_MODIFIED_DATE,  \
				 nounattributes.modifier_name as NOUN_ATTRIBUTE_MODIFIER_NAME, \
				 nounattributes.modifier_id as NOUN_ATTRIBUTE_MODIFIER_ID, \
				 nounattributes.is_secondary_noun as NOUN_ATTRIBUTE_IS_SECONDARY_NOUN  \
				 from nouns  \
				 left join nounattributes on nouns.id = nounattributes.nounid  \
				 where nouns.id in (select id from nouns where id = :id)

#Find All Noun By Project
findAllBaseNounByProject.sql=select nouns.id as NOUN_ID, nouns.name as NOUN_NAME, nouns.label as NOUN_LABEL, \
				 nouns.description as NOUN_DESCRIPTION, nouns.projectid as NOUN_PROJECT_ID,  \
				 nouns.moduleid as NOUN_MODULE_ID, nouns.cache_enabled as NOUN_CACHE_ENABLED,  \
				 nouns.notes as NOUN_NOTES, nouns.created_by as NOUN_CREATED_BY, nouns.created_date as NOUN_CREATED_DATE,  \
				 nouns.last_modified_by as NOUN_LAST_MODIFIED_BY, nouns.last_modified_date as NOUN_LAST_MODIFIED_DATE,  \
				 nouns.last_modified_by as NOUN_LAST_MODIFIED_BY  \
				 from nouns  \
				 where nouns.projectid = :projectid

#Find All Noun By Project Id
findAllNounByProjectId.sql=select nouns.id as NOUN_ID, nouns.name as NOUN_NAME, \
				 nouns.label as NOUN_LABEL, \
				 nouns.default_activity_id as NOUN_DEFAULT_ACTIVITY_ID,	\
				 nouns.description as NOUN_DESCRIPTION, nouns.projectid as NOUN_PROJECT_ID,  \
				 nouns.moduleid as NOUN_MODULE_ID, nouns.cache_enabled as NOUN_CACHE_ENABLED,  \
				 nouns.notes as NOUN_NOTES, nouns.created_by as NOUN_CREATED_BY, nouns.created_date as NOUN_CREATED_DATE,  \
				 nouns.last_modified_by as NOUN_LAST_MODIFIED_BY, nouns.last_modified_date as NOUN_LAST_MODIFIED_DATE,  \
				 nouns.last_modified_by as NOUN_LAST_MODIFIED_BY,  \
				 nounattributes.id as NOUN_ATTRIBUTE_ID, nounattributes.name as NOUN_ATTRIBUTE_NAME,  \
				 nounattributes.nounid as NOUN_ATTRIBUTE_NOUN_ID,  \
				 nounattributes.label as NOUN_ATTRIBUTE_LABEL, nounattributes.description as NOUN_ATTRIBUTE_DESCRIPTION,  \
				 nounattributes.base_attr_type_id as NOUN_ATTRIBUTE_base_attr_type_id,  \
				 nounattributes.part_of_unique_key as NOUN_ATTRIBUTE_PART_OF_UNIQUE_KEY,  \
				 nounattributes.data_length as NOUN_ATTRIBUTE_DATA_LENGTH,  \
				 nounattributes.relationships as NOUN_ATTRIBUTE_RELATIONSHIPS,  \
				 nounattributes.notes as NOUN_ATTRIBUTE_NOTES,  \
				 nounattributes.created_by as NOUN_ATTRIBUTE_CREATED_BY, nounattributes.created_date as NOUN_ATTRIBUTE_CREATED_DATE,  \
				 nounattributes.last_modified_by as NOUN_ATTRIBUTE_LAST_MODIFIED_BY,  \
				 nounattributes.last_modified_date as NOUN_ATTRIBUTE_LAST_MODIFIED_DATE,  \
				 nounattributes.modifier_name as NOUN_ATTRIBUTE_MODIFIER_NAME, \
				 nounattributes.modifier_id as NOUN_ATTRIBUTE_MODIFIER_ID, \
				 nounattributes.is_secondary_noun as NOUN_ATTRIBUTE_IS_SECONDARY_NOUN  \
				 from nouns  \
				 left join nounattributes on nouns.id = nounattributes.nounid  \
				 where nouns.id in (select id from nouns where nouns.projectid = :id)		

#Update Noun By Noun ID
updateNoun.sql=update nouns set name=:name, label=:label, description=:description, projectid=:projectid, \
				moduleid=:moduleid, cache_enabled=:cache_enabled, notes=:notes, created_date=:created_date, \
				created_by=:created_by, last_modified_date=:last_modified_date, last_modified_by= :last_modified_by \
				where id=:id
				
#Update Noun By Noun ID
updateNounDefaultactivity.sql=update nouns set default_activity_id=:default_activity_id where id=:id

				
#Update Noun Attribute By Noun Attribute ID and Noun ID
updateNounAttribute.sql=update nounattributes set name=:name, label=:label, description=:description, \
						base_attr_type_id=:base_attr_type_id, part_of_unique_key=:part_of_unique_key, \
						data_length=:data_length, relationships=:relationships, notes=:notes, created_date=:created_date, \
						created_by=:created_by, last_modified_date=:last_modified_date, last_modified_by=:last_modified_by , \
						modifier_name=:modifier_name ,modifier_id=:modifier_id, is_secondary_noun=:is_secondary_noun \
						where nounid=:nounid and id=:id

#importing schema from mongo
insertMongoSchema.sql = insert into importednouns (db_name, collection_name, attribute, project_id, user_id) \
				         values ( :db_name, :collection_name, :attribute, :project_id, :user_id)
						
#Find all_other_noun_attributes for mongo
findAllOtherNouns.sql = select * from importednouns group by db_name

#find all bucket
findallbucket.sql = select * from couch_attribute group by bucket

#find all design
findalldesign.sql = select * from couch_attribute where bucket =:bucket

findallviews.sql = select * from couch_attribute where design=:design

#delete existing mongo noun for the project
deleteMongoNounAttributes.sql = delete from importednouns where project_id=:project_id 

deleteCouchNounAttributes.sql = delete from couch_attribute where project_id=:project_id

#find all 
listOfTableForOtheNoun.sql = select * from importednouns where db_name=:db_name and project_id=:project_id

getbyprojectid.sql = select * from couch_attribute where project_id=:project_id

#find all for couch
listOfTableForCouchNoun.sql = select * from couch_attribute where bucket=:bucket and views=:views and design=:design and project_id=:project_id

#find projectid 
findMongoProjectid.sql = select * from importednouns where project_id=:project_id

#Find All Noun Attributes By Noun ID
findAllNounAttributes.sql=select * from nounattributes where nounid=:nounid

#Delete Noun By ID
deleteNoun.sql=delete from nouns where id=:id

#Delete Noun Attributes By ID and Noun ID
deleteNounAttributes.sql=delete from nounattributes where id=:id and nounid=:nounid

get_all_attr_base_types.sql=select * from base_noun_attr_types 