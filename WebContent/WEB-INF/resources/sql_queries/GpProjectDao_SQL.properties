# Get All projects for userId
getAllProjectsByUserId.sql=select projects.id as PROJECT_ID, projects.name as PROJECT_NAME, \
				 projects.label as PROJECT_LABEL, projects.description as PROJECT_DESCRIPTION, \
				 projects.default_module_id as PROJECT_DEFAULT_MODULE_ID, \
				 projects.default_module_label as PROJECT_DEFAULT_MODULE_LABEL, projects.notes as PROJECT_NOTES, \
				 projects.client_os_types as PROJECT_CLIENT_OS_TYPES, projects.client_device_types as PROJECT_CLIENT_DEVICE_TYPES, \
				 projects.client_dev_languages as PROJECT_CLIENT_DEV_LANGUAGES, projects.client_dev_frameworks as PROJECT_CLIENT_DEV_FRAMEWORKS, \
				 projects.client_widget_frameworks as PROJECT_CLIENT_WIDGET_FRAMEWORKS, \
				 projects.mobile_css_framework as PROJECT_MOBILE_CSS_FRAMEWORK, \
				 projects.desktop_css_framework as PROJECT_DESKTOP_CSS_FRAMEWORK, \
				 projects.stand_alone_app as PROJECT_STAND_ALONE_APP,\
				 projects.communication_protocal as PROJECT_COMMUNICATION_PROTOCAL,\
				 projects.app_ui_template as PROJECT_APP_UI_TEMPLATE, projects.client_code_pattern as PROJECT_CLIENT_CODE_PATTERN, \
				 projects.server_code_pattern as PROJECT_SERVER_CODE_PATTERN, projects.server_dev_lang as PROJECT_SERVER_DEV_LANG, \
				 projects.server_dev_framework as PROJECT_SERVER_DEV_FRAMEWORK, projects.server_run_time as PROJECT_SERVER_RUN_TIME, \
				 projects.server_os as PROJECT_SERVER_OS, projects.server_dbms as PROJECT_SERVER_DBMS, \
				 projects.server_deployment_environment as PROJECT_SERVER_DEPLOYMENT_ENVIRONMENT, \
				 projects.global_extensions as PROJECT_GLOBAL_EXTENSIONS, \
				 projects.ui_navigation_styles as PROJECT_UI_NAVIGATION_STYLES, \
				 projects.supported_browsers as PROJECT_SUPPORTED_BROWSERS, \
				 projects.default_human_language as PROJECT_DEFAULT_HUMAN_LANGUAGE, \
				 projects.other_human_languages as PROJECT_OTHER_HUMAN_LANGUAGES, \
				 projects.entity as PROJECT_ENTITY, \
				 projects.enforce_documentation as PROJECT_ENFORCE_DOCUMENTATION, \
				 projects.widget_count as PROJECT_WIDGET_COUNT, \
				 projects.widget_count as PROJECT_GENERATION_TYPE, \
				 projects.authorization_type as PROJECT_AUTHORIZATION_TYPE, \
				 projects.authorizations as PROJECT_AUTHORIZATIONS, \
				 projects.created_by as PROJECT_CREATED_BY, projects.created_date as PROJECT_CREATED_DATE, \
				 projects.last_modified_by as PROJECT_LAST_MODIFIED_BY, projects.last_modified_date as PROJECT_LAST_MODIFIED_DATE ,\
				 projects.application_type as PROJECT_APPLICATION_TYPE, \
				 projects.lotus_notes_enabled as PROJECT_LOTUS_ENABLED, \
				 projects.extra_project_info as PROJECT_EXTRA_INFO \
				 from geppetto.projects \
				 where geppetto.projects.created_by = :created_by
				 
#Get Project Details By ProjectId
findProjectDetailsByProjectId.sql=select projects.id as PROJECT_ID, projects.name as PROJECT_NAME, \
				 projects.label as PROJECT_LABEL, projects.description as PROJECT_DESCRIPTION, \
				 projects.default_module_id as PROJECT_DEFAULT_MODULE_ID, \
				 projects.default_module_label as PROJECT_DEFAULT_MODULE_LABEL, projects.notes as PROJECT_NOTES, \
				 projects.client_os_types as PROJECT_CLIENT_OS_TYPES, projects.client_device_types as PROJECT_CLIENT_DEVICE_TYPES, \
				 projects.client_dev_languages as PROJECT_CLIENT_DEV_LANGUAGES, projects.client_dev_frameworks as PROJECT_CLIENT_DEV_FRAMEWORKS, \
				 projects.client_widget_frameworks as PROJECT_CLIENT_WIDGET_FRAMEWORKS, \
				 projects.mobile_css_framework as PROJECT_MOBILE_CSS_FRAMEWORK, \
				 projects.desktop_css_framework as PROJECT_DESKTOP_CSS_FRAMEWORK, \
				 projects.stand_alone_app as PROJECT_STAND_ALONE_APP,\
				 projects.communication_protocal as PROJECT_COMMUNICATION_PROTOCAL,\
				 projects.app_ui_template as PROJECT_APP_UI_TEMPLATE, projects.client_code_pattern as PROJECT_CLIENT_CODE_PATTERN, \
				 projects.server_code_pattern as PROJECT_SERVER_CODE_PATTERN, projects.server_dev_lang as PROJECT_SERVER_DEV_LANG, \
				 projects.server_dev_framework as PROJECT_SERVER_DEV_FRAMEWORK, projects.server_run_time as PROJECT_SERVER_RUN_TIME, \
				 projects.server_os as PROJECT_SERVER_OS, projects.server_dbms as PROJECT_SERVER_DBMS, \
				 projects.server_deployment_environment as PROJECT_SERVER_DEPLOYMENT_ENVIRONMENT, \
				 projects.global_extensions as PROJECT_GLOBAL_EXTENSIONS, \
				 projects.ui_navigation_styles as PROJECT_UI_NAVIGATION_STYLES, \
				 projects.supported_browsers as PROJECT_SUPPORTED_BROWSERS, \
				 projects.default_human_language as PROJECT_DEFAULT_HUMAN_LANGUAGE, \
				 projects.other_human_languages as PROJECT_OTHER_HUMAN_LANGUAGES, \
				 projects.entity as PROJECT_ENTITY, \
				 projects.enforce_documentation as PROJECT_ENFORCE_DOCUMENTATION, \
				 projects.widget_count as PROJECT_WIDGET_COUNT, \
				 projects.widget_count as PROJECT_GENERATION_TYPE, \
				 projects.authorization_type as PROJECT_AUTHORIZATION_TYPE, \
				 projects.authorizations as PROJECT_AUTHORIZATIONS, \
				 projects.created_by as PROJECT_CREATED_BY, projects.created_date as PROJECT_CREATED_DATE,  \
				 projects.last_modified_by as PROJECT_LAST_MODIFIED_BY, projects.last_modified_date as PROJECT_LAST_MODIFIED_DATE, \
				 projects.application_type as PROJECT_APPLICATION_TYPE, \
				 projects.lotus_notes_enabled as PROJECT_LOTUS_ENABLED, \
				 projects.extra_project_info as PROJECT_EXTRA_INFO \
				 from geppetto.projects \
				 where geppetto.projects.id = :project_id
				 
#Insert Project
insert.project.sql=insert into projects (name, label, description, default_module_id, default_module_label, notes, \
				 created_date, created_by, last_modified_date, last_modified_by, client_os_types, client_device_types , client_dev_languages, client_dev_frameworks, \
				 client_widget_frameworks, mobile_css_framework, desktop_css_framework,stand_alone_app,communication_protocal,app_ui_template, client_code_pattern, \
				 server_code_pattern, server_dev_lang, server_dev_framework, server_run_time, server_os, server_dbms, server_deployment_environment, \
				 global_extensions, ui_navigation_styles, supported_browsers, default_human_language, other_human_languages, entity, enforce_documentation, \
				 widget_count, generation_type, authorization_type, authorizations, application_type) values (:name, :label, :description,(select IF(MAX(dm.default_module_id) IS NULL, 1, MAX(dm.default_module_id+1)) from projects dm), :default_module_label, :notes, :created_date, :created_by, \
				 :last_modified_date, :last_modified_by,:client_os_types, :client_device_types , :client_dev_languages, :client_dev_frameworks, \
				 :client_widget_frameworks, :mobile_css_framework, :desktop_css_framework,:stand_alone_app,:communication_protocal,:app_ui_template, :client_code_pattern, \
				 :server_code_pattern, :server_dev_lang, :server_dev_framework, :server_run_time, :server_os, :server_dbms, :server_deployment_environment, \
				 :global_extensions, :ui_navigation_styles, :supported_browsers, :default_human_language, :other_human_languages, :entity, :enforce_documentation, \
				 :widget_count, :generation_type, :authorization_type, :authorizations, :application_type);

# Update project query statement
update.project.sql=update projects set name=:name,  label=:label, description=:description, default_module_id=:default_module_id, default_module_label =:default_module_label, \
				 notes=:notes, created_by=:created_by, created_date=:created_date, last_modified_by =:last_modified_by, last_modified_date=:last_modified_date, \
				 client_os_types=:client_os_types, client_device_types=:client_device_types, client_dev_languages=:client_dev_languages, client_dev_frameworks=:client_dev_frameworks, \
				 client_widget_frameworks=:client_widget_frameworks, mobile_css_framework=:mobile_css_framework, desktop_css_framework=:desktop_css_framework,\
				 stand_alone_app=:stand_alone_app,communication_protocal=:communication_protocal,app_ui_template=:app_ui_template, client_code_pattern=:client_code_pattern, \
				 server_code_pattern=:server_code_pattern, server_dev_lang=:server_dev_lang, server_dev_framework=:server_dev_framework, server_run_time=:server_run_time, \
				 server_os=:server_os, server_dbms=:server_dbms, server_deployment_environment=:server_deployment_environment, global_extensions=:global_extensions,\
				 ui_navigation_styles=:ui_navigation_styles, supported_browsers=:supported_browsers, default_human_language=:default_human_language, other_human_languages=:other_human_languages, \
				 entity=:entity, enforce_documentation=:enforce_documentation, widget_count=:widget_count, generation_type=:generation_type, authorization_type=:authorization_type, \
				 authorizations=:authorizations ,application_type=:application_type, lotus_notes_enabled=:lotus_notes_enabled, extra_project_info=:extra_project_info, lotus_notes_cred_enabled=:lotus_notes_cred_enabled where id = :id
				 
# Insertion for deleting project record 
insert.projects.deletion.sql=insert into projects_for_deletions (project_id,name,label, description, default_module_id, default_module_label, notes, created_date, created_by, \
				last_modified_date, last_modified_by, client_os_types, client_device_types, client_dev_languages, client_dev_frameworks, client_widget_frameworks, \
				mobile_css_framework, desktop_css_framework,stand_alone_app,communication_protocal,app_ui_template, client_code_pattern, server_code_pattern, server_dev_lang, server_dev_framework, server_run_time, server_os, \
				server_dbms, server_deployment_environment, global_extensions, ui_navigation_styles, supported_browsers, default_human_language, other_human_languages, \
				entity, enforce_documentation, widget_count, generation_type, authorization_type, authorizations) values (:project_id,:name, :label, :description, :default_module_id, \
				:default_module_label, :notes, :created_date, :created_by, :last_modified_date, :last_modified_by, :client_os_types, :client_device_types, \
				:client_dev_languages, :client_dev_frameworks, :client_widget_frameworks, :mobile_css_framework, :desktop_css_framework,:stand_alone_app,:communication_protocal,:app_ui_template, :client_code_pattern, :server_code_pattern, \
				:server_dev_lang, :server_dev_framework, :server_run_time, :server_os, :server_dbms, :server_deployment_environment, :global_extensions, :ui_navigation_styles, \
				:supported_browsers, :default_human_language, :other_human_languages, :entity, :enforce_documentation, :widget_count, :generation_type, \
				:authorization_type, :authorizations)				 
				 
# Deletion for multiple tables

# Delete record in projects table
delete.project.sql=delete from projects where id=:id

#delete data in nounattributes
delete.nounsattributes.sql=DELETE FROM nounattributes WHERE nounid IN (SELECT id FROM nouns WHERE nouns.projectid=:id);

#delete record in nouns 
delete.nouns.sql=DELETE FROM nouns WHERE projectid=:id;

#delete record in widgets table
delete.widgets.sql=DELETE FROM widgets WHERE screen_id IN (SELECT id FROM screens WHERE screens.projectid=:id);

#To remove record in screens
delete.screens.sql=DELETE FROM screens WHERE projectid=:id;

#delete data in micro flow
delete.micro_flow.sql=DELETE FROM micro_flow WHERE flow_control_id IN (SELECT id FROM flow_control WHERE activity_id IN(select id FROM activities where projectid=:id));

#remove data in flow control                       
delete.flow_control.sql=DELETE FROM flow_control WHERE activity_id IN (SELECT id FROM activities WHERE projectid =:id);

#delete data in verbs                      
delete.verbs.sql=DELETE FROM verbs WHERE activity_id IN (SELECT id FROM activities WHERE activities.projectid=:id);

 #delete data in activities
delete.activities.sql=DELETE FROM activities WHERE projectid=:id;				 
				 
#Getting the no. of widgets
get_widget_count.sql=select widget_count from projects order by widget_count desc limit 1

#select a given project is exist or not: 
search_for_exist_project.sql=SELECT projects.name as PROJECT_NAME FROM projects WHERE projects.name=:project_name

#delete data in project template
delete.projecttemplate.sql=DELETE FROM project_template_info WHERE project_id=:id;				 

#delete data in project template component
delete.projecttemplatecomponent.sql=DELETE FROM project_template_components WHERE project_id=:id;				 
