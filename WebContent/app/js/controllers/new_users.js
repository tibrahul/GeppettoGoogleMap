/**
 *
 * @author </br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Schubert System </br>
 * Schubert system Copyright - NewPortBay LLC copy_right_range</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
 */
app
		.controller(
				"NewUserCtrl",
				[
						'$scope',
						'$rootScope',
						'$location',
						'$window',
						'$q',
						'$http',
						'RestURL',
						'$templateCache',
						'uiGridConstants',
						'$modal',
						'$log',
						function($scope, $rootScope, $location, $window, $q, $http, RestURL, $templateCache, uiGridConstants, $modal,$log) {

							$scope.SearchListScreen = {
								id : '',
								username : '',
								user_id : '',
								created_on : '',
								script_executed_on : '',
								json_created_on : ''
							};

							/**
							 * Init function to show the content of onload 
							 */
							$scope.init = function() {
								$scope.SearchListScreen.username = $scope.SearchListScreen.username ? $scope.SearchListScreen.username : "%%";
								$scope.SearchListScreen.user_id = $scope.SearchListScreen.user_id ? $scope.SearchListScreen.user_id : "%%";
								$scope.SearchListScreen.created_on = $scope.SearchListScreen.created_on ? $scope.SearchListScreen.created_on : "%%";
								$scope.SearchListScreen.script_executed_on = $scope.SearchListScreen.script_executed_on ? $scope.SearchListScreen.script_executed_on : "%%";
								$scope.SearchListScreen.json_created_on = $scope.SearchListScreen.json_created_on ? $scope.SearchListScreen.json_created_on : "%%";

								var deferred = $q.defer();
								$http(
										{
											//localhost:3000
											//52.207.24.87:8030
											url :   RestURL.nodeURL+'SearchListScreen_Default_Activity/SearchListScreen/search?username=' + $scope.SearchListScreen.username + '&user_id='
													+ $scope.SearchListScreen.user_id + '&created_on=' + $scope.SearchListScreen.created_on + '&script_executed_on='
													+ $scope.SearchListScreen.script_executed_on + '&json_created_on=' + $scope.SearchListScreen.json_created_on,
											method : 'GET',
											//withCredentials: true,
											header : {
												"Accept" : "application/json"
											}
										}).success(function(response) {
									console.log(response);
									var search_result = [];
									response.forEach(function(entry) {
										console.log('entry data :', angular.toJson(entry));
										var row = {
											'id' : entry.id,
											'username' : entry.username,
											'user_id' : entry.user_id,
											'created_on' : entry.created_on,
											'script_executed_on' : entry.script_executed_on,
											'json_created_on' : entry.json_created_on,
											'lock_or_unlock' : entry.lockorunlock,
											'isEditable' : entry.isEditable,
											'adminId' : entry.adminid,
											'type': entry.type,
											'installrname': entry.installr_name
										};
										search_result.push(row);
									});
									handle_search_result(search_result);
								}).error(function(err) {
									alert('You got' + err + 'error');
									deferred.reject(err);
								});

							}

							// Delete
							$scope.deleteUserDetailsWithCorrsAdmin = function(selectedNwUsrId, fornewUserAssignedAdminId, currntloggedAdminId, fullname,selectedUserId) {
								console.log('deleteUserDetailsWithCorrsAdmin', selectedNwUsrId);
								console.log('fornewUserAssignedAdminId,', fornewUserAssignedAdminId);
								console.log('currntloggedAdminId =>', currntloggedAdminId);
								console.log('fullname =>', fullname);
								console.log('selectedUserId =>',selectedUserId);
								$http({
									url : RestURL.baseURL + 'login/deleteUserIdCrpndAdminId' + '/' + selectedNwUsrId + '/' + fornewUserAssignedAdminId + '/' + currntloggedAdminId + '/' + fullname + '/' +selectedUserId,
									method : 'GET',
									header : {
										"Accept" : "application/json"
									}
								}).success(function(response) {
									console.log('coming success delete');
									$scope.init();
								}).error(function(response) {
									console.log('coming error while delete');
								});
							}

							// Save the new_users under any one of the admin below method does 
							$scope.align_newUsr_udrAdmin = function(loggedAdminId, selectedUserIdIngrid, adminName) {
								$http({
									url : RestURL.baseURL + 'login/allocateNewUsrUnderAdmin' + '/' + loggedAdminId + '/' + selectedUserIdIngrid + '/' + adminName,
									method : 'GET',
									header : {
										"Accept" : "application/json"
									}
								}).success(function(response) {
									console.log('Inside the success');
									if (response != null) {
										if (response === true) {
											console.log('while updated successfully In the user with admin table');
											openDialog($modal, 'Aligned the newuser under your control').result.then(function(dataFromModal) {
											}, function() {
												console.log('cancel')
											});
											$scope.init();
											//Already locked by someone we dont know who we wil check that below
											//			  				  console.log('Already locked by someone we dont know who we wil check that below')
											// call a method and pass both id like adminid and selectedNewUserId 
											// And check that return true or false based on enable and disable 
										} else if (response === false) {
											//Updated the status as well as added that record into another table
											// As well as save that to userandadmindetail table
											//			  				  console.log('Updated the status as well as added that record into another table');
											alert('Cannot unlock because somebody Already Locked');
										} else {
											console.log('Some internal Error happened')
										}
									}
								}).error(function(response) {
									console.log('Inside the error');
								});
							}

							$scope.updateMe = function(row, btnStatus) {
								console.log('upadte me coming Inside', btnStatus);
								//Start
								$rootScope.selectedUserIdIngrid = row.entity.id;
								$rootScope.selectedUserByAdmin = row.entity.adminId;
								$rootScope.selectedUserId = row.entity.user_id;
								console.log('$rootScope.selectedUserId =>',$rootScope.selectedUserId)
								console.log('$rootScope.selectedUserByAdmin =>', $rootScope.selectedUserByAdmin);
								console.log('selectedUserIdIngrid', $rootScope.selectedUserIdIngrid);
								console.log('grid data  =>', angular.toJson($scope.gridOptions.data));
								//			  console.log('the grid option data =>',angular.toJson($scope.gridOptions.data.length));
								// .. using  for loop to find the id of selected element and remove in to array and show the alert pop up to added in to arry like
								for (var a = 0; a < $scope.gridOptions.data.length; a++) {
									if ($scope.gridOptions.data[a].id == $rootScope.selectedUserIdIngrid) {
										// so here we splice the data in to the List of new user grid data
										console.warn('get the id of selected id data =>', angular.toJson($scope.gridOptions.data[a].id));
										//					  $scope.gridOptions.data.splice(a, 1);
										// Need to add the info its locked
										console.warn('AFter deleted data =>', angular.toJson($scope.gridOptions.data));

										// Getting here current logged 
										console.log('Currently logged user Info from new_user js ', angular.toJson($rootScope.loggedInUserData));
										console.log('currently logged admin Id ', angular.toJson($rootScope.loggedInUserData.userid));
										var loggedAdminId = $rootScope.loggedInUserData.userid;
										console.log('loggedAdminId ', loggedAdminId);

										// UNlock na going to lock else we need to see the user have access to  open the lock
										// so first inital ajax make and visit the column in new user table 
										// the user lock or unlock . If unlock need to lock the status and store it in database 
										// ELSe if he already lock we need to check and open 
										// if he is authorised only if not valid user show an alert already locked by another user u dnt hve permission

										// If btn status chnge 
										if (btnStatus != 'unlock') {
											$http({
												url : RestURL.baseURL + 'login/validatepersonlockorunlock' + '/' + loggedAdminId + '/' + $rootScope.selectedUserIdIngrid,
												method : 'GET',
												/*params: {user_id: user.id},*/
												//withCredentials: true,
												header : {
													"Accept" : "application/json"
												}
											})
													.success(
															function(response) {
																// Tell them as u have unlock the state or not
																console.log('have access or not')
																if (response != null) {
																	if (response === true) {
																		//						  				alert('Permissin Granted');
																		openDialog($modal, 'You Have a Permission').result.then(function(dataFromModal) {
																		}, function() {
																			console.log('cancel')
																		});
																		$scope.init();
																		console.log('Permissin Granted');
																	} else {
																		//						  				  alert('DOnt Have a Key');
																		console.log('DOnt Have a Key');
																		openDialog($modal,
																				'If you Press OK You need to enter Again all the datas of MAC and Installr Details As well as we will assign that user in your control!').result
																				.then(function(dataFromModal) {
																				}, function() {
																					console.log('Insidde the opensioa selected Id =>', $rootScope.selectedUserIdIngrid)
																					// Delete the record using above selectUserIgGrid in the mac installar and others 
																					var usernme = $rootScope.loggedInUserData.username;
																					var fullName = angular.copy(usernme.substring(0, usernme.indexOf("@")));
																					console.log('************************', fullName);
																					console.log('************************************************************************************',$rootScope.selectedUserId)
																					$scope.deleteUserDetailsWithCorrsAdmin($rootScope.selectedUserIdIngrid, $rootScope.selectedUserByAdmin,
																							loggedAdminId, fullName,$rootScope.selectedUserId);
																					/*.then(function(){
																																  $scope.align_newUsr_udrAdmin(loggedAdminId,$rootScope.selectedUserIdIngrid,fullName);  
																															  });*/
																					console.log('@@@@@@@@@@ after =>')
																				});
																	}
																}
															}).error(function(response) {
														// Error may occured Internally

													})
										} else {
											console.log('Inside the else part of update Me ajax call loggedAdinId', loggedAdminId);
											console.log('Inside the else part of update Me ajax call $rootScope.selectedUserIdIngrid', $rootScope.selectedUserIdIngrid);
											var usernme = $rootScope.loggedInUserData.username;
											var fullName = angular.copy(usernme.substring(0, usernme.indexOf("@")));
											console.log('Locked By Username In else part of Ajax=>', fullName);
											$scope.align_newUsr_udrAdmin(loggedAdminId, $rootScope.selectedUserIdIngrid, fullName);
										}
										//End
									}
								}
							}

							$scope.gridOptions = {
								enableRowSelection : true,
								enableSelectAll : false,
								enableFiltering:true
							};

							function handle_search_result(search_result) {
								console.log('search_result data ', angular.toJson(search_result));
								$scope.gridOptions.data = search_result;
								//		$scope.gridApi.core.notifyDataChange( uiGridConstants.dataChange.ALL);
							}

							$rootScope.isSelected = false;
							$rootScope.isBtnEnable = false;

							// for changing the dynamic lock  , 'ui-grid-row-selected':row.entity.isEditable != 'true', ng-click=\"selectButtonClick(row, $event)\"
							$templateCache
									.put('ui-grid/selectionRowHeaderButtons',
											"<div class=\"ui-grid-selection-row-header-buttons\" ng-class=\"{'ui-grid-icon-lock':row.entity.isEditable == 'true', 'ui-grid-icon-ok':row.entity.isEditable !='true' }\">&nbsp;</div>");

							$scope.selectButtonClick = function() {
								console.log('coming or Not from the select button click ');
							}

							// Update details button dynamic changes 
							$scope.updateDetails = function(row) {
								console.log('$rootScope.loggedInUserData.userid =>',$rootScope.loggedInUserData.userid);
								if (row.entity.adminId == $rootScope.loggedInUserData.userid) {
									console.log('Db has true locked by some one')
									return false;
								} else {
									console.log('No One locked by this button still now Or unlock by some one who has locked')
									return true;
								}

							}

							// Show further Screens for update the details this methodm can route it 
							$scope.shwFurtherScrens = function(row) {
								// Need to route here for further screens
								var userIdOfselectedRow = row.entity.user_id;
								$log.log('Selected User id for Update the Installr details',angular.toJson(userIdOfselectedRow));
								console.log('Not yet Start to show the Furhter screens ');
								$location.url("/en-US/installr_user/"+userIdOfselectedRow)
							}

							//  btnName of Lock Or Unlock
							$scope.btnName = function(row) {
								if (row.entity.lock_or_unlock == "unlock") {
									console.log('Unlock');
									return "Click Here to Lock";
								} else {
									var lockedadminUserName = angular.copy(row.entity.lock_or_unlock);
									console.log('lockedadminUserName', lockedadminUserName);
									return lockedadminUserName;
								}
							}
							
			             var userTypes = [
			               { value: 'OPEN', label: 'Open' },
			               { value: 'COMPLETED', label: 'Completed'}
			             ];

							//row.entity.isEditable == \'true\'
							$scope.gridOptions.columnDefs = [
							/*{ displayName: 'Id', name: 'id'},*/
							{
								displayName : 'User_id',
								name : 'user_id'
							}, {
								displayName : 'Username',
								name : 'username'
							}, {
								displayName : 'Update_Details',
								name : 'isEditable',
								cellTemplate : '<button class="btn btn-primary" ng-click="grid.appScope.shwFurtherScrens(row)" ng-disabled="grid.appScope.updateDetails(row)">Update Details</button>'
							}, {
								displayName : 'Select',
								name : 'lock_or_unlock',
								type : 'boolean',
								cellTemplate : '<input type="checkbox" ng-click="grid.appScope.testChange(row,test)" ng-model="test">'
							},

							{
								displayName : 'Lock/UnLock',
								name : 'lock_or_unlock',
								type : 'boolean',
								cellTemplate : '<button class="btn btn-primary" ng-click="grid.appScope.updateMe(row,row.entity.lock_or_unlock)">{{grid.appScope.btnName(row)}}</button>'
							},
							{
								  displayName : 'Status', 	
						          name: 'type', 
//						          field: 'type', 
						          filter: { selectOptions: userTypes, type: uiGridConstants.filter.SELECT }
						     },
						     {
								  displayName : 'Installr_Name', 	
						          name: 'installrname'
						     }
							];

							$scope.$on('$viewContentLoaded', function(event) {
								var biggestHeight = 0;
								var height = 0;
								$(".screen").find('*').each(function() {
									height = $(this).position().top + $(this).height() + 100;
									if (height > biggestHeight) {
										biggestHeight = height;
									}
								});
								$(".screen").height(biggestHeight);
							});

							$scope.refresh_screen_height = function() {
								var biggestHeight = 0;
								var height = 0;
								$(".screen").find('*').each(function() {
									height = $(this).position().top + $(this).height() + 100;
									if (height > biggestHeight) {
										biggestHeight = height;
									}
								});
								$(".screen").height(biggestHeight);
							};
							$scope.init();
						} ]);